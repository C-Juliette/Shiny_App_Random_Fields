source('Randomly_generated_fields.R')
source('Moving_average.R')
library(shiny)
library(shinydashboard)
library(randomfields)
library(ggplot2)
reactlog::reactlog_enable()
source('Distributions.R')
source('Randomly_generated_fields.R')
source('Moving_average.R')
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
runApp('Shiny_app2.R')
runApp('Shiny_app2.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('SERVER.R')
shinyApp(ui, server)
source('SERVER.R')
shinyApp(ui, server)
source('SERVER.R')
shinyApp(ui, server)
source('SERVER.R')
shinyApp(ui, server)
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
?box
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
?box
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
as.vector(1)
as.vector("1")
as.numeric("c(1,2)")
as.vector("c(1,2)")
?gsub
library(randomfields)
library(ggplot2)
reactlog::reactlog_enable()
source('Distributions.R')
source('Randomly_generated_fields.R')
source('Moving_average.R')
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
?textInput
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
charactervector_as_vector("1,2")
library(randomfields)
charactervector_as_vector("1,2")
library(shiny)
library(shinydashboard)
library(randomfields)
library(ggplot2)
charactervector_as_vector("1,2")
charactervector_as_vector("1,2, 3")
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
library(randomfields)
library(ggplot2)
reactlog::reactlog_enable()
source('Distributions.R')
source('Randomly_generated_fields.R')
source('Moving_average.R')
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
library(randomfields)
library(ggplot2)
reactlog::reactlog_enable()
source('Distributions.R')
source('Randomly_generated_fields.R')
source('Moving_average.R')
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
library(randomfields)
library(ggplot2)
reactlog::reactlog_enable()
source('Distributions.R')
source('Randomly_generated_fields.R')
source('Moving_average.R')
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
library(randomfields)
library(ggplot2)
reactlog::reactlog_enable()
source('Distributions.R')
source('Randomly_generated_fields.R')
source('Moving_average.R')
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
library(randomfields)
library(ggplot2)
reactlog::reactlog_enable()
source('Distributions.R')
source('Randomly_generated_fields.R')
source('Moving_average.R')
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
library(randomfields)
library(ggplot2)
reactlog::reactlog_enable()
source('Distributions.R')
source('Randomly_generated_fields.R')
source('Moving_average.R')
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
library(randomfields)
library(ggplot2)
reactlog::reactlog_enable()
source('Distributions.R')
source('Randomly_generated_fields.R')
source('Moving_average.R')
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
library(randomfields)
library(ggplot2)
reactlog::reactlog_enable()
source('Distributions.R')
source('Randomly_generated_fields.R')
source('Moving_average.R')
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('SERVER.R')
shinyApp(ui, server)
source('SERVER.R')
shinyApp(ui, server)
source('SERVER.R')
shinyApp(ui, server)
source('SERVER.R')
shinyApp(ui, server)
runApp('Shiny_app2.R')
library(shiny); runApp('Shiny_app2.R')
runApp('Shiny_app2.R')
library(shiny)
library(shinydashboard)
library(randomfields)
library(ggplot2)
reactlog::reactlog_enable()
source('Distributions.R')
source('Randomly_generated_fields.R')
source('Moving_average.R')
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
library(randomfields)
library(ggplot2)
reactlog::reactlog_enable()
source('Distributions.R')
source('Randomly_generated_fields.R')
source('Moving_average.R')
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('SERVER.R')
shinyApp(ui, server)
source('SERVER.R')
shinyApp(ui, server)
source('SERVER.R')
shinyApp(ui, server)
source('SERVER.R')
shinyApp(ui, server)
source('SERVER.R')
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
library(randomfields)
library(ggplot2)
reactlog::reactlog_enable()
source('Distributions.R')
source('Randomly_generated_fields.R')
source('Moving_average.R')
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
library(randomfields)
library(ggplot2)
reactlog::reactlog_enable()
source('Distributions.R')
source('Randomly_generated_fields.R')
source('Moving_average.R')
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
library(randomfields)
library(ggplot2)
reactlog::reactlog_enable()
source('Distributions.R')
source('Randomly_generated_fields.R')
source('Moving_average.R')
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
library(randomfields)
library(ggplot2)
reactlog::reactlog_enable()
source('Distributions.R')
source('Randomly_generated_fields.R')
source('Moving_average.R')
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
library(randomfields)
library(ggplot2)
reactlog::reactlog_enable()
source('Distributions.R')
source('Randomly_generated_fields.R')
source('Moving_average.R')
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
shinyApp(ui, server)
shinyApp(ui, server)
shinyApp(ui, server)
shinyApp(ui, server)
install.packages("rsconnect")
rsconnect::setAccountInfo(name='juliette-chiapello', token='7B41ECF961684C2AC9CBBFF00DA7F984', secret='q5OP9pPTGQsgqRfLv/jaziZRn8K2axM9rpQIaAw+')
library(rsconnect)
rsconnect::deployApp('path/to/your/app')
shiny::runApp('RandomFields')
library(shiny)
library(shinydashboard)
library(ggplot2)
library(randomfields)
source('Distributions.R')
source('Randomly_generated_fields.R')
source('Moving_average.R')
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
runApp('RandomFields')
runApp('RandomFields')
devtools::install_github("C-Juliette/randomfields")
runApp('RandomFields')
rsconnect::appDependencies("/Users/juliette/Documents/Shiny_app_new/RandomFields")
library(shiny)
library(shinydashboard)
source('UI.R')
source('SERVER.R')
library(shiny)
library(shinydashboard)
source('UI.R')
library(shiny)
library(shinydashboard)
library(randomfields)
library(ggplot2)
reactlog::reactlog_enable()
source('Distributions.R')
source('Randomly_generated_fields.R')
source('Moving_average.R')
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
library(randomfields)
library(ggplot2)
reactlog::reactlog_enable()
source('Distributions.R')
source('Randomly_generated_fields.R')
source('Moving_average.R')
source('UI.R')
source('SERVER.R')
shinyApp(ui, server)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
